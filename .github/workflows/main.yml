name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  #test:
    #runs-on: ubuntu-latest
#    services:
#      docker:
       # image: docker:19.03.12
     #   options: --privileged
    #steps:
      #- name: Checkout code
       # uses: actions/checkout@v2

      #- name: Set up Docker Buildx
       # uses: docker/setup-buildx-action@v2

      #- name: Build Docker image
       # run: docker-compose -f src/docker-compose.yml build

      #- name: Run tests
        #run: docker-compose -f src/docker-compose.yml run web python manage.py test shop.tests_shop

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t isa95330/ecom-name:latest -f src/Dockerfile src/

      - name: Push Docker image
        run: docker push isa95330/ecom-name:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment variables
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }}" >> $GITHUB_ENV
          echo "AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> $GITHUB_ENV    

      - name: Collect static files
        run: |
          docker run --rm \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} \
            -v $PWD:/app \
            isa95330/ecom-name:latest \
            python manage.py collectstatic --noinput

      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@ec2-15-237-160-93.eu-west-3.compute.amazonaws.com << 'EOF'
            
          docker pull isa95330/ecom-name:latest
          docker stop ecom-name || true
          docker rm ecom-name || true
          docker run -d --name ecom-name -p 8080:8080 isa95330/ecom-name:latest
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
